package com.edgedo.timetask;

import com.edgedo.bigdata.entity.BigdataFenxiTeamDay;
import com.edgedo.bigdata.entity.TransitCarTeam;
import com.edgedo.bigdata.entity.TransitCarTeamQuery;
import com.edgedo.bigdata.service.BigdataFenxiTeamWeekService;
import com.edgedo.common.util.HttpRequestUtil;
import com.edgedo.common.util.ObjectUtil;
import com.edgedo.util.DateUtil;
import org.json.JSONArray;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Map;

/**
 * @ClassName BigdataFenxiTeam
 * @Description 企业统计汇总
 * @Author 床前明月光
 * @Date 2019/10/8 10:13
 **/
@Component
public class BigdataFenxiTeam {

    @Value("${ReportDataUrl}")
    private String ReportDataUrl;
    @Autowired
    private BigdataFenxiTeamWeekService bigdataFenxiTeamWeekService;

    @Scheduled(cron = "0 0/1 * * * ? ")//0/2 * * * * ?每天九点更新
    public void fenxiTeamWeek(){
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
//        Date date = null;
//        try {
//            date = sdf.parse("2019-8-30");
//        } catch (ParseException e) {
//            e.printStackTrace();
//        }
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        date = calendar.getTime();
        int weekYear = DateUtil.getYear(date);
        int weekOfYear =  DateUtil.getWeekOfYear(date);
        Date  beginDate = DateUtil.getBeginDayOfWeek(date);
        Date endDate = DateUtil.getEndDayOfWeek(date);
        TransitCarTeamQuery query = new TransitCarTeamQuery();
        String reportDataUrl = ReportDataUrl+"/sys/carTeam/selectTeamCarInfo.jsn";
        query.setCityId("130300");
        Map<String,String> parameterMap = ObjectUtil.objectToMapString(query,"");
        String responseStr = HttpRequestUtil.sendPostRequest(reportDataUrl,parameterMap);
        org.json.JSONObject jsonObject = new org.json.JSONObject(responseStr);
        JSONArray jsonArray = jsonObject.optJSONArray("list");
        List<TransitCarTeam> teamList = com.alibaba.fastjson.JSONArray.parseArray(jsonArray.toString(), TransitCarTeam.class);
        for(TransitCarTeam team:teamList){
            bigdataFenxiTeamWeekService.insertOrUpdate(team,weekYear,weekOfYear,beginDate,endDate);
        }
    }
}
