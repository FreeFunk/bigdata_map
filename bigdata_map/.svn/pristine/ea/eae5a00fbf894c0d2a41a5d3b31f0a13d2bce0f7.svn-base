package com.edgedo.bigdata.service;

import com.edgedo.bigdata.entity.*;
import com.edgedo.bigdata.mapper.BigdataDriverCardRecMapper;
import com.edgedo.bigdata.mapper.BigdataDriverChangeCarRecMapper;
import com.edgedo.bigdata.mapper.BigdataDriverChangeTeamRecMapper;
import com.edgedo.bigdata.queryvo.BigdataDriverCardRecQuery;
import com.edgedo.bigdata.queryvo.BigdataDriverCardRecView;
import com.edgedo.common.util.Guid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@Service
public class BigdataDriverCardRecService {
	
	
	@Autowired
	private BigdataDriverCardRecMapper mapper;

	@Autowired
	private BigdataDriverCardInfoService bigdataDriverCardInfoService;

	@Autowired
	private BigdataDriverChangeCarRecMapper bigdataDriverChangeCarRecMapper;

	@Autowired
	private BigdataDriverChangeTeamRecMapper bigdataDriverChangeTeamRecMapper;


	SimpleDateFormat sdfDateInt = new SimpleDateFormat("yyyyMMdd");
	
	public List<BigdataDriverCardRecView> listPage(BigdataDriverCardRecQuery query){
		List list = mapper.listPage(query);
		query.setList(list);
		return list;
	}
	
	/***
	 * 新增方法
	 * @return
	 */
	public String insert(BigdataDriverCardRec voObj) {
		voObj.setId(Guid.guid());
		mapper.insert(voObj);
		return "";
	}
	
	/***
	 * 动态修改方法
	 * @param
	 * @return
	 */
	public String update(BigdataDriverCardRec voObj) {
		mapper.updateById(voObj);
		return "";
	}
	
	/***
	 * 全修改
	 * @param
	 * @return
	 */
	public String updateAll(BigdataDriverCardRec voObj) {
		mapper.updateAllColumnById(voObj);
		return "";
	}
	
	
	
	/**
	 * 单个删除
	 * @param id
	 */
	public int delete(String id) {
		return mapper.deleteById(id);
	}
	
	/**
	 * 批量删除
	 * @param ids
	 */
	public int deleteByIds(List<String> ids) {
		
		return mapper.deleteBatchIds(ids);
	}
	
	
	
	/**
	 * 加载单个
	 * @param id
	 */
	public BigdataDriverCardRec loadById(String id) {
		return mapper.selectById(id);
	}

	/**
	 * 接收司机身份卡插卡和拔卡记录
	 * @param cardRec
	 */
    public void insertAcceptDriverCardRec(BigdataDriverCardRec cardRec) {
		String compId = cardRec.getCompId();
		String bid = cardRec.getBid();

		Date cur = new Date();
		String countDateStr = sdfDateInt.format(cur);
		Integer countDate = new Integer(countDateStr);
		Integer countMonth = countDate/100;
		Map<String,Object> param = new HashMap<String,Object>();
		param.put("compId",compId);
		param.put("bid",bid);
		param.put("countDate",countDate);
		param.put("countMonth",countMonth);
		int count = mapper.countByCompIdAndBid(param);
		if(count==0){

			//将记录插入数据库
			cardRec.setCreateTime(cur);
			cardRec.setCountDate(countDate);
			cardRec.setCountMonth(countMonth);
			//判断记录是否合格
			String carPlateNum = cardRec.getCarPlateNum();
			String carPlateColor = cardRec.getCarPlateColor();
			String licenceNum1 = cardRec.getLicenceNum();
			String driverName = cardRec.getDriverName();
			if(carPlateNum==null || carPlateNum.equals("") ||carPlateColor==null || carPlateColor.equals("")||
			licenceNum1==null || licenceNum1.equals("") || driverName==null || driverName.equals("")){
				cardRec.setQualifiedFlag("0");
			}else {
				cardRec.setQualifiedFlag("1");
			}
			insert(cardRec);
//			//更新司机卡的信息
//			String licenceNum = cardRec.getLicenceNum();
//			BigdataDriverCardInfo bigdataDriverCardInfo = bigdataDriverCardInfoService.selectByLicenceNum(licenceNum);
//			if(bigdataDriverCardInfo!=null){
//				bigdataDriverCardInfo.setQualifiedFlag(cardRec.getQualifiedFlag());
//				bigdataDriverCardInfo.setLastUseTime(new Date());
//				bigdataDriverCardInfoService.update(bigdataDriverCardInfo);
//			}else {
//				BigdataDriverCardInfo bigdataDriverCardInfo1 = new BigdataDriverCardInfo();
//				bigdataDriverCardInfo1.setCreateTime(new Date());
//				bigdataDriverCardInfo1.setCompId(cardRec.getCompId());
//				bigdataDriverCardInfo1.setCompName(cardRec.getCompName());
//				bigdataDriverCardInfo1.setDriverName(cardRec.getDriverName());
//				bigdataDriverCardInfo1.setCompany(cardRec.getCompany());
//				bigdataDriverCardInfo1.setLicenceNum(cardRec.getLicenceNum());
//				bigdataDriverCardInfo.setQualifiedFlag(cardRec.getQualifiedFlag());
//				bigdataDriverCardInfo.setLastUseTime(new Date());
//				bigdataDriverCardInfoService.insert(bigdataDriverCardInfo1);
//			}
//			//更新车辆月度考核表
		}
		String licenceNum = cardRec.getLicenceNum();//驾驶员资格证号
		Emp emp = bigdataDriverCardInfoService.selectByLicenceCode(licenceNum);
		//车牌号  车牌颜色  2 黄色  3 蓝色
		TransitCarBaseinfo transitCarBaseinfo = null;
		if(cardRec.getCarPlateColor().equals("1")){//1 蓝色 2 黄色
			transitCarBaseinfo = bigdataDriverCardInfoService.selectByCarNumAndCarColor(cardRec.getCarPlateNum(),"3");
		}else {
			transitCarBaseinfo = bigdataDriverCardInfoService.selectByCarNumAndCarColor(cardRec.getCarPlateNum(),"2");
		}
		if(emp==null){//没有插入
			Emp newEmp = new Emp();
			newEmp.setId(Guid.guid());//主键
			newEmp.setCarPlateNum(transitCarBaseinfo.getCarPlateNum());//车牌号
			newEmp.setCreateTime(new Date());//创建时间
			newEmp.setOwnerCarTeamId(transitCarBaseinfo.getOwnerCarTeamId());//企业id
			newEmp.setOwnerCarTeamName(transitCarBaseinfo.getOwnerCarTeamName());//企业名
			newEmp.setEmpName(transitCarBaseinfo.getEmpName());//从业人员名字
			newEmp.setEmpPhone(transitCarBaseinfo.getEmpPhone());//电话
//			newEmp.setEmpIdCard(transitCarBaseinfo.getEmpId());//身份证
			newEmp.setPlateNum(transitCarBaseinfo.getId());
			newEmp.setEmpEntryDay(transitCarBaseinfo.getFirstDocTime());//入职时间
			newEmp.setProvinceId(transitCarBaseinfo.getProvinceId());//省
			newEmp.setProvinceName(transitCarBaseinfo.getProvinceName());
			newEmp.setCityId(transitCarBaseinfo.getCityId());
			newEmp.setCityName(transitCarBaseinfo.getCityName());
			newEmp.setXianQuId(transitCarBaseinfo.getXianquId());
			newEmp.setXianQuName(transitCarBaseinfo.getXianquName());
			newEmp.setDataState("1");
			newEmp.setLicenceCode(cardRec.getLicenceNum());
			newEmp.setEmpState("1");
			bigdataDriverCardInfoService.insertEmp(newEmp);
		}
		//有的不更新
		//查询该司机是否有记录
		BigdataDriverCardInfo bigdataDriverCardInfo = bigdataDriverCardInfoService.selectDriverInfo(cardRec.getLicenceNum());

		//判断是否为空
		if(bigdataDriverCardInfo==null){//插入
			BigdataDriverCardInfo bigdataDriverCardInfoNew = new BigdataDriverCardInfo();
			bigdataDriverCardInfoNew.setId(Guid.guid());//主键
			bigdataDriverCardInfoNew.setCreateTime(new Date());//创建时间
			bigdataDriverCardInfoNew.setCompId(transitCarBaseinfo.getBeidouCompId());//所属运营商
			bigdataDriverCardInfoNew.setCompName(transitCarBaseinfo.getBeidouCompName());//所属运营商名字
			bigdataDriverCardInfoNew.setDriverName(cardRec.getDriverName());//驾驶员姓名
			bigdataDriverCardInfoNew.setLastUseTime(new Date());//上次使用时间按
//			bigdataDriverCardInfoNew.setQualifiedFlag('');
			bigdataDriverCardInfoNew.setTeamId(transitCarBaseinfo.getOwnerCarTeamId());//企业id
			bigdataDriverCardInfoNew.setTeamName(transitCarBaseinfo.getOwnerCarTeamName());//企业名字
			bigdataDriverCardInfoNew.setProvinceId(transitCarBaseinfo.getProvinceId());//省
			bigdataDriverCardInfoNew.setProvinceName(transitCarBaseinfo.getProvinceName());
			bigdataDriverCardInfoNew.setCityId(transitCarBaseinfo.getCityId());//市
			bigdataDriverCardInfoNew.setCityName(transitCarBaseinfo.getCityName());
			bigdataDriverCardInfoNew.setXianquId(transitCarBaseinfo.getXianquId());//县区
			bigdataDriverCardInfoNew.setXianquName(transitCarBaseinfo.getXianquName());
			bigdataDriverCardInfoNew.setDriverPhone(transitCarBaseinfo.getEmpPhone());//电话
			bigdataDriverCardInfoNew.setDriverEntryDay(transitCarBaseinfo.getFirstDocTime());//入职时间
//			bigdataDriverCardInfoNew.setDriverIdCard(transitCarBaseinfo.getEmpId());//身份证
			bigdataDriverCardInfoNew.setDriverCode(cardRec.getLicenceNum());//资格证号
			bigdataDriverCardInfoNew.setCarPlateNum(cardRec.getCarPlateNum());//车牌号
			bigdataDriverCardInfoNew.setCarFrameNum(transitCarBaseinfo.getCarFrameNum());//车架号
			bigdataDriverCardInfoNew.setCarPlateColor(cardRec.getCarPlateColor());//车牌颜色
			bigdataDriverCardInfoNew.setCarPlateColorText(getColor(cardRec.getCarPlateColor()));
			bigdataDriverCardInfoNew.setCarType(transitCarBaseinfo.getCarFunType());//车辆类型
			bigdataDriverCardInfoNew.setIsRealState("1");
			bigdataDriverCardInfoNew.setTeamBindTime(new Date());//企业关联时间
			bigdataDriverCardInfoNew.setCarBindTime(new Date());//车量关联时间
			bigdataDriverCardInfoService.insert(bigdataDriverCardInfoNew);
		}else {//存在 更新
			//查看是否与上次车牌号一样  企业一样
			String currCarPlateNum = cardRec.getCarPlateNum();//司机刷卡时 上传的车牌号
			String currTeamName = cardRec.getCompany();//司机刷卡时 上传的企业名
			String dataBaseCarPlateNum = bigdataDriverCardInfo.getCarPlateNum();//车牌号
			String dataBaseTeamName = bigdataDriverCardInfo.getTeamName();//企业
			if(!(currTeamName.equals(dataBaseTeamName))){//判断企业
				//不一样 添加更换记录
				BigdataDriverChangeTeamRec bigdataDriverChangeTeamRec = new BigdataDriverChangeTeamRec();
				bigdataDriverChangeTeamRec.setId(Guid.guid());//主键
				bigdataDriverChangeTeamRec.setCreateTime(new Date());//创建时间
				bigdataDriverChangeTeamRec.setTeamId(bigdataDriverCardInfo.getTeamId());//所属企业
				bigdataDriverChangeTeamRec.setTeamName(bigdataDriverCardInfo.getTeamName());//企业名
				bigdataDriverChangeTeamRec.setProvinceId(transitCarBaseinfo.getProvinceId());//省
				bigdataDriverChangeTeamRec.setProvinceName(transitCarBaseinfo.getProvinceName());
				bigdataDriverChangeTeamRec.setCityId(transitCarBaseinfo.getCityId());//市
				bigdataDriverChangeTeamRec.setCityName(transitCarBaseinfo.getCityName());
				bigdataDriverChangeTeamRec.setXianquId(transitCarBaseinfo.getXianquId());//县区
				bigdataDriverChangeTeamRec.setXianquName(transitCarBaseinfo.getXianquName());
				bigdataDriverChangeTeamRec.setDriverId(transitCarBaseinfo.getEmpId());//驾驶员id
				bigdataDriverChangeTeamRec.setDriverName(cardRec.getDriverName());//驾驶员姓名
				bigdataDriverChangeTeamRec.setDriverPhone(transitCarBaseinfo.getEmpPhone());//驾驶员电话
				bigdataDriverChangeTeamRec.setDriverCode(cardRec.getLicenceNum());//驾驶资格证号
				bigdataDriverChangeTeamRec.setStartTime(bigdataDriverCardInfo.getTeamBindTime());//车辆一开始的开始时间
				bigdataDriverChangeTeamRec.setEndTime(new Date());//结束时间
				bigdataDriverChangeTeamRecMapper.insert(bigdataDriverChangeTeamRec);
				bigdataDriverCardInfo.setTeamId(transitCarBaseinfo.getOwnerCarTeamId());//新的企业
				bigdataDriverCardInfo.setTeamName(transitCarBaseinfo.getOwnerCarTeamName());
				bigdataDriverCardInfo.setTeamBindTime(new Date());//车辆关联更换时间
			}
			if(!(currCarPlateNum.equals(dataBaseCarPlateNum))){//判断车牌号
				//不一样 添加更换记录
				BigdataDriverChangeCarRec bigdataDriverChangeCarRec = new BigdataDriverChangeCarRec();
				bigdataDriverChangeCarRec.setId(Guid.guid());//主键
				bigdataDriverChangeCarRec.setCreateTime(new Date());//创建时间
				bigdataDriverChangeCarRec.setCompId(bigdataDriverCardInfo.getCompId());//所属运营商id
				bigdataDriverChangeCarRec.setCompName(bigdataDriverCardInfo.getCompName());//所属运营商
				bigdataDriverChangeCarRec.setTeamId(bigdataDriverCardInfo.getTeamId());//所属企业
				bigdataDriverChangeCarRec.setTeamName(bigdataDriverCardInfo.getTeamName());//企业名
				bigdataDriverChangeCarRec.setProvinceId(transitCarBaseinfo.getProvinceId());//省
				bigdataDriverChangeCarRec.setProvinceName(transitCarBaseinfo.getProvinceName());
				bigdataDriverChangeCarRec.setCityId(transitCarBaseinfo.getCityId());//市
				bigdataDriverChangeCarRec.setCityName(transitCarBaseinfo.getCityName());
				bigdataDriverChangeCarRec.setXianquId(transitCarBaseinfo.getXianquId());//县区
				bigdataDriverChangeCarRec.setXianquName(transitCarBaseinfo.getXianquName());
				bigdataDriverChangeCarRec.setDriverId(transitCarBaseinfo.getEmpId());//驾驶员id
				bigdataDriverChangeCarRec.setDriverName(cardRec.getDriverName());//驾驶员姓名
				bigdataDriverChangeCarRec.setDriverPhone(transitCarBaseinfo.getEmpPhone());//驾驶员电话
				bigdataDriverChangeCarRec.setDriverCode(cardRec.getLicenceNum());//驾驶资格证号
				bigdataDriverChangeCarRec.setStartTime(bigdataDriverCardInfo.getCarBindTime());//车辆一开始的开始时间
				bigdataDriverChangeCarRec.setEndTime(new Date());//结束时间
				bigdataDriverChangeCarRecMapper.insert(bigdataDriverChangeCarRec);
				//更新司机信息卡表
				bigdataDriverCardInfo.setCarPlateNum(cardRec.getCarPlateNum());//新的车牌号
				bigdataDriverCardInfo.setCarPlateColor(cardRec.getCarPlateColor());//新的车牌颜色
				bigdataDriverCardInfo.setCarPlateColorText(getColor(cardRec.getCarPlateColor()));
				bigdataDriverCardInfo.setCarBindTime(new Date());//车辆关联更换时间
			}
			//更新司机信息卡表
			bigdataDriverCardInfo.setLastUseTime(new Date());//刷卡时间
			bigdataDriverCardInfoService.updateById(bigdataDriverCardInfo);
		}

    }


    public String getColor(String carColor){
    	//1-蓝色,2-黄色,3-黑色,4-白色,9-黄绿相间
		if(carColor.equals("1")){
			return "蓝色";
		}else if(carColor.equals("2")){
			return "黄色";
		}else if(carColor.equals("3")){
			return "黑色";
		}else if(carColor.equals("4")){
			return "白色";
		}else {
			return "黄绿相间";
		}
	}


	public int countDriverCardUpNum(Map<String, Object> param2) {
		return mapper.countDriverCardUpNum(param2);
	}
}
