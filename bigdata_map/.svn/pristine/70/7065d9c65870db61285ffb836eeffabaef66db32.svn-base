<html lang="en">
<head>
	<meta charset="utf-8" />
	<title>路书</title>
	<style type="text/css">
		body, html{width: 100%;height: 100%;margin:0;font-family:"微软雅黑";}
		#map_canvas{width:100%;height:500px;}
		#result {width:100%}
		button {
			    border: 1px solid #8BA4DC;
    border-radius: 3px;
        cursor: pointer;
        background-color: #FFFFFF;
    color: #000000;
		}
		.gpsList .tdcls{
			border:1px solid #1f6794;
			text-align: center;
			color: #47C6F1;
			height: 34px;
			cursor:pointer;
		}
		.gpsList .trcls{
			border:1px solid #1f6794;
			width: 61%;
			font-weight: 600;
			color: #47C6F1;
			height: 34px;
			text-align: center;
		}
		.backcolor{
			background-color: #fff;
		}
		.BMap_cpyCtrl {

			display: none;

		}

		.anchorBL {

			display: none;

		}
	</style>
	 <script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=y0M3smRm6FRmGRYH2VT0mXLC6M4mhgPt"></script>
	<script type="text/javascript" src="http://api.map.baidu.com/library/LuShu/1.2/src/LuShu_min.js"></script>
	<script type="text/javascript" src="js/jquery.min.js"></script>
	<script type="text/javascript" src="js/laydate/laydate.js"></script>
	<script src="js/tool.js"></script>
	<script src="js/layer/layer.js"></script>
	<script src="js/convertor.js"></script>
</head>
<body>
<div>

	<div id="map_canvas" style="float: left;width: 100%;height: 100%"></div>


</div>
<script type="text/javascript">

    var $=jQuery.noConflict();

    var queryArgs = getQueryParam();

	var carPlateNum = decodeURI(queryArgs.carPlateNum);
	$("#carPlateNum").html(carPlateNum);
    var carPlateColor = queryArgs.carPlateColor;

    var  map ;

    function getCarGps() {

        loadIndex = layer.load(1, {
            shade: [0.5, '#fff']
        });

		map = new BMap.Map('map_canvas');
		map.enableScrollWheelZoom();
        map.centerAndZoom(new BMap.Point(119.59991,39.971502,39.971502), 13);
        $.ajax({
            type: "POST",
            url: basePathUrl+"/admin/carInfo/loadById.jsn",
            data: {'id':carPlateNum+'_'+carPlateColor},
            dataType: "json",
            beforeSend: function (XMLHttpRequest) {
                XMLHttpRequest.setRequestHeader("access-token", getStorage("access_token"));
            },
            success: function(data){
                var html = "<tr id='title'><td  class='trcls'>时间</td><td class='trcls'>速度（Km/h）</td></tr>";
                if(data.success){
                    if(typeof (data.data) !='undefined'){
                        if(typeof (data.data.localtionInfo)=='undefined'){
                            data.data.localtionInfo = '暂无';
						}
                        var lat = data.data.latitude;
                        var long = data.data.longitude;
                        var point = {lat: lat, lng: long};
                        var new_point = GpsToBaiduPoint(point);
                        map.centerAndZoom(new_point, 14);
                        var carIcon = new BMap.Icon("images/blue90.png", new BMap.Size(20,20));
                        var carMarker = new BMap.Marker(new_point,{icon:carIcon});
                        map.addOverlay(carMarker);
                        var opts = {
                            width : 350,     // 信息窗口宽度
                            height: 180,     // 信息窗口高度
                            title : "", // 信息窗口标题
                            enableMessage:true,//设置允许信息窗发送短息
                        }
                        var infoWindow1 = new BMap.InfoWindow("<p style='font-size: 12px;'><span style='color: #4d89bf;'>车牌号：</span>"+data.data.carPlateNum
                            +"<p style='font-size: 12px;'><span style='color: #4d89bf;'>类型：</span>"+data.data.carType
                            +"<p style='font-size: 12px;'><span style='color: #4d89bf;'>位置：</span>"+data.data.localtionInfo, opts);  // 创建信息窗口对象
                        carMarker.addEventListener("click", function(){
                            map.openInfoWindow(infoWindow1,new_point); //开启信息窗口
                        });
					}

                    layer.closeAll();
                }else {
                    if(data.code==1001){
                        location.href = '../../login.html';
                    }else {
                        layer.msg('后台异常', {
                            icon: 5
                        });
                    }
                }
            }
        });
    }
    getCarGps();
	//判断日期，时间大小
	function compareTime(logintime, logouttime) {
		if (logintime.length > 0 && logouttime.length > 0) {
			var logintimeTemp = logintime.split(" ");
			var logouttimeTemp = logouttime.split(" ");

			var arrloginDate = logintimeTemp[0].split("-");
			var arrlogoutDate = logouttimeTemp[0].split("-");

			var arrloginTime = logintimeTemp[1].split(":");
			var arrlogoutTime = logouttimeTemp[1].split(":");

			var allLoginDate = new Date(arrloginDate[0], arrloginDate[1], arrloginDate[2], arrloginTime[0], arrloginTime[1], arrloginTime[2]);
			var allLogoutDate = new Date(arrlogoutDate[0], arrlogoutDate[1], arrlogoutDate[2], arrlogoutTime[0], arrlogoutTime[1], arrlogoutTime[2]);

			if (allLoginDate.getTime() >= allLogoutDate.getTime()) {
				return false;
			} else {
				return true;
			}
		} else {
			return false;
		}
	}
	//javascript秒数转化为时分秒
    function formatSeconds(value) {
        var secondTime = parseInt(value);// 秒
        var minuteTime = 0;// 分
        var hourTime = 0;// 小时
        if(secondTime > 60) {//如果秒数大于60，将秒数转换成整数
            //获取分钟，除以60取整数，得到整数分钟
            minuteTime = parseInt(secondTime / 60);
            //获取秒数，秒数取佘，得到整数秒数
            secondTime = parseInt(secondTime % 60);
            //如果分钟大于60，将分钟转换成小时
            if(minuteTime > 60) {
                //获取小时，获取分钟除以60，得到整数小时
                hourTime = parseInt(minuteTime / 60);
                //获取小时后取佘的分，获取分钟除以60取佘的分
                minuteTime = parseInt(minuteTime % 60);
            }
        }
        var result = "" + parseInt(secondTime) + "秒";

        if(minuteTime > 0) {
            result = "" + parseInt(minuteTime) + "分" + result;
        }
        if(hourTime > 0) {
            result = "" + parseInt(hourTime) + "小时" + result;
        }
        return result;
    }

    /**
     *在每个点的真实步骤中设置小车转动的角度（车载图标）
     *@param{BMap.Point} curPos 起点
     *@param{BMap.Point} targetPos 终点
     *@return deg 角度值
     */
     function setRotation (curPos, targetPos) {
        var me = this;
        var deg = 0;
        //这个方法安卓api没有,但根据方法名称可以推断出是将经纬度进行一样倍数的放大或缩小,也忘了
        //拿小数位比较多的double来计算对精度影响大不大,所以自己写了一个方法,直接将经纬度放大一百万倍
        curPos = map.pointToPixel(curPos);
        targetPos = map.pointToPixel(targetPos);
        if (targetPos.x != curPos.x) {
            var tan = (targetPos.y - curPos.y) / (targetPos.x - curPos.x),
                atan = Math.atan(tan);
            deg = atan * 360 / (2 * Math.PI);
            if (targetPos.x < curPos.x) {
                deg = -deg + 90 + 90;
            } else {
                deg = -deg;
            }
            deg=-deg;
        } else {
            var disy = targetPos.y - curPos.y;
            var bias = 0;
            if (disy > 0)
                bias = -1
            else
                bias = 1
            deg = -bias * 90;
        }
        return deg;
    }

    /**
     * 单个坐标转换
     * @param point
     * @returns {BMap.Point}
     */
    function GpsToBaiduPoint(point){
        var _t = wgs2bd(point.lat,point.lng);
        var _BPoint = new BMap.Point(_t[1], _t[0]);
        return _BPoint;
    }

    /**
     * 批量坐标转换
     * @param points
     * @returns {Array}
     */
    function GpsToBaiduPoints(points){
        var resultPoints = [];
        $.each(points,function(index,point){
            var _t = wgs2bd(point.lat,point.lng);
            var _BPoint = new BMap.Point(_t[1], _t[0]);
            resultPoints.push(_BPoint);
        });
        return resultPoints;
    }

    //////////////////////////////////////////
    //////////////转换核心代码////////////////
    //////////////////////////////////////////
    var pi = 3.14159265358979324;
    var a = 6378245.0;
    var ee = 0.00669342162296594323;
    var x_pi = 3.14159265358979324*3000.0/180.0;


    //世界大地坐标转为百度坐标
    function wgs2bd(lat,lon) {
        var wgs2gcjR = wgs2gcj(lat, lon);
        var gcj2bdR = gcj2bd(wgs2gcjR[0], wgs2gcjR[1]);
        return gcj2bdR;
    }

    function gcj2bd(lat,lon) {
        var x = lon, y = lat;
        var z = Math.sqrt(x * x + y * y) + 0.00002 * Math.sin(y * x_pi);
        var theta = Math.atan2(y, x) + 0.000003 * Math.cos(x * x_pi);
        var bd_lon = z * Math.cos(theta) + 0.0065;
        var bd_lat = z * Math.sin(theta) + 0.006;
        var result = [];
        result.push(bd_lat);
        result.push(bd_lon);
        return result;
    }

    function bd2gcj(lat,lon) {
        var x = lon - 0.0065, y = lat - 0.006;
        var z = Math.sqrt(x * x + y * y) - 0.00002 * Math.sin(y * x_pi);
        var theta = Math.atan2(y, x) - 0.000003 * Math.cos(x * x_pi);
        var gg_lon = z * Math.cos(theta);
        var gg_lat = z * Math.sin(theta);
        var result = [];
        result.push(gg_lat);
        result.push(gg_lon);
        return result;
    }

    function wgs2gcj(lat,lon) {
        var dLat = transformLat(lon - 105.0, lat - 35.0);
        var dLon = transformLon(lon - 105.0, lat - 35.0);
        var radLat = lat / 180.0 * pi;
        var magic = Math.sin(radLat);
        magic = 1 - ee * magic * magic;
        var sqrtMagic = Math.sqrt(magic);
        dLat = (dLat * 180.0) / ((a * (1 - ee)) / (magic * sqrtMagic) * pi);
        dLon = (dLon * 180.0) / (a / sqrtMagic * Math.cos(radLat) * pi);
        var mgLat = lat + dLat;
        var mgLon = lon + dLon;
        var result = [];
        result.push(mgLat);
        result.push(mgLon);
        return result;
    }

    function transformLat(lat,lon) {
        var ret = -100.0 + 2.0 * lat + 3.0 * lon + 0.2 * lon * lon + 0.1 * lat * lon + 0.2 * Math.sqrt(Math.abs(lat));
        ret += (20.0 * Math.sin(6.0 * lat * pi) + 20.0 * Math.sin(2.0 * lat * pi)) * 2.0 / 3.0;
        ret += (20.0 * Math.sin(lon * pi) + 40.0 * Math.sin(lon / 3.0 * pi)) * 2.0 / 3.0;
        ret += (160.0 * Math.sin(lon / 12.0 * pi) + 320 * Math.sin(lon * pi  / 30.0)) * 2.0 / 3.0;
        return ret;
    }

    function transformLon(lat,lon) {
        var ret = 300.0 + lat + 2.0 * lon + 0.1 * lat * lat + 0.1 * lat * lon + 0.1 * Math.sqrt(Math.abs(lat));
        ret += (20.0 * Math.sin(6.0 * lat * pi) + 20.0 * Math.sin(2.0 * lat * pi)) * 2.0 / 3.0;
        ret += (20.0 * Math.sin(lat * pi) + 40.0 * Math.sin(lat / 3.0 * pi)) * 2.0 / 3.0;
        ret += (150.0 * Math.sin(lat / 12.0 * pi) + 300.0 * Math.sin(lat / 30.0 * pi)) * 2.0 / 3.0;
        return ret;
    }
</script>
</body>
</html>
